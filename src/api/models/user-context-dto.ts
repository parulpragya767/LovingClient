/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface UserContextDTO
 */
export interface UserContextDTO {
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'userId'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'conversationId'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContextDTO
     */
    'emotionalStates'?: Array<UserContextDTOEmotionalStatesEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContextDTO
     */
    'relationalNeeds'?: Array<UserContextDTORelationalNeedsEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContextDTO
     */
    'preferredLoveLanguages'?: Array<UserContextDTOPreferredLoveLanguagesEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContextDTO
     */
    'preferredRitualTypes'?: Array<UserContextDTOPreferredRitualTypesEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContextDTO
     */
    'preferredTones'?: Array<UserContextDTOPreferredTonesEnum>;
    /**
     * 
     * @type {number}
     * @memberof UserContextDTO
     */
    'availableTimeMinutes'?: number;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'preferredEffortLevel'?: UserContextDTOPreferredEffortLevelEnum;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'preferredIntensity'?: UserContextDTOPreferredIntensityEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserContextDTO
     */
    'currentContexts'?: Array<UserContextDTOCurrentContextsEnum>;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'timeContext'?: UserContextDTOTimeContextEnum;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'relationshipStatus'?: UserContextDTORelationshipStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'semanticQuery'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'lastInteractionAt'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'createdAt'?: string;
    /**
     * 
     * @type {string}
     * @memberof UserContextDTO
     */
    'updatedAt'?: string;
}

export const UserContextDTOEmotionalStatesEnum = {
    Happy: 'Happy',
    Sad: 'Sad',
    Anxious: 'Anxious',
    Peaceful: 'Peaceful',
    Excited: 'Excited',
    Tired: 'Tired',
    Stressed: 'Stressed',
    Loving: 'Loving',
    Grateful: 'Grateful',
    Frustrated: 'Frustrated',
    Overwhelmed: 'Overwhelmed'
} as const;

export type UserContextDTOEmotionalStatesEnum = typeof UserContextDTOEmotionalStatesEnum[keyof typeof UserContextDTOEmotionalStatesEnum];
export const UserContextDTORelationalNeedsEnum = {
    Connection: 'Connection',
    Appreciation: 'Appreciation',
    Respect: 'Respect',
    Trust: 'Trust',
    Intimacy: 'Intimacy',
    Support: 'Support',
    Acceptance: 'Acceptance',
    Space: 'Space',
    Security: 'Security',
    Adventure: 'Adventure'
} as const;

export type UserContextDTORelationalNeedsEnum = typeof UserContextDTORelationalNeedsEnum[keyof typeof UserContextDTORelationalNeedsEnum];
export const UserContextDTOPreferredLoveLanguagesEnum = {
    Belong: 'BELONG',
    Fire: 'FIRE',
    Spark: 'SPARK',
    Care: 'CARE',
    Self: 'SELF',
    Build: 'BUILD',
    Grow: 'GROW',
    Beyond: 'BEYOND',
    Grace: 'GRACE'
} as const;

export type UserContextDTOPreferredLoveLanguagesEnum = typeof UserContextDTOPreferredLoveLanguagesEnum[keyof typeof UserContextDTOPreferredLoveLanguagesEnum];
export const UserContextDTOPreferredRitualTypesEnum = {
    Reflection: 'Reflection',
    Conversation: 'Conversation',
    Play: 'Play',
    Appreciation: 'Appreciation',
    Gratitude: 'Gratitude',
    PhysicalConnection: 'Physical Connection',
    QualityTime: 'Quality Time',
    Adventure: 'Adventure',
    Relaxation: 'Relaxation',
    SelfImprovement: 'Self-Improvement'
} as const;

export type UserContextDTOPreferredRitualTypesEnum = typeof UserContextDTOPreferredRitualTypesEnum[keyof typeof UserContextDTOPreferredRitualTypesEnum];
export const UserContextDTOPreferredTonesEnum = {
    Romantic: 'Romantic',
    Playful: 'Playful',
    Serious: 'Serious',
    Lighthearted: 'Lighthearted',
    Intimate: 'Intimate',
    Adventurous: 'Adventurous',
    Calm: 'Calm',
    Energetic: 'Energetic',
    Thoughtful: 'Thoughtful',
    Spontaneous: 'Spontaneous'
} as const;

export type UserContextDTOPreferredTonesEnum = typeof UserContextDTOPreferredTonesEnum[keyof typeof UserContextDTOPreferredTonesEnum];
export const UserContextDTOPreferredEffortLevelEnum = {
    Low: 'LOW',
    Moderate: 'MODERATE',
    High: 'HIGH'
} as const;

export type UserContextDTOPreferredEffortLevelEnum = typeof UserContextDTOPreferredEffortLevelEnum[keyof typeof UserContextDTOPreferredEffortLevelEnum];
export const UserContextDTOPreferredIntensityEnum = {
    Low: 'LOW',
    Moderate: 'MODERATE',
    High: 'HIGH',
    Intense: 'INTENSE'
} as const;

export type UserContextDTOPreferredIntensityEnum = typeof UserContextDTOPreferredIntensityEnum[keyof typeof UserContextDTOPreferredIntensityEnum];
export const UserContextDTOCurrentContextsEnum = {
    MorningRoutine: 'Morning Routine',
    EveningRoutine: 'Evening Routine',
    Weekend: 'Weekend',
    Holiday: 'Holiday',
    Anniversary: 'Anniversary',
    DateNight: 'Date Night',
    LongDistance: 'Long Distance',
    StressfulPeriod: 'Stressful Period',
    NewRelationship: 'New Relationship',
    LongTermRelationship: 'Long-term Relationship'
} as const;

export type UserContextDTOCurrentContextsEnum = typeof UserContextDTOCurrentContextsEnum[keyof typeof UserContextDTOCurrentContextsEnum];
export const UserContextDTOTimeContextEnum = {
    Morning: 'MORNING',
    Afternoon: 'AFTERNOON',
    Evening: 'EVENING',
    Night: 'NIGHT',
    Weekday: 'WEEKDAY',
    Weekend: 'WEEKEND',
    Holiday: 'HOLIDAY',
    Anytime: 'ANYTIME'
} as const;

export type UserContextDTOTimeContextEnum = typeof UserContextDTOTimeContextEnum[keyof typeof UserContextDTOTimeContextEnum];
export const UserContextDTORelationshipStatusEnum = {
    New: 'NEW',
    Established: 'ESTABLISHED',
    Committed: 'COMMITTED',
    Engaged: 'ENGAGED',
    Married: 'MARRIED',
    Rekindling: 'REKINDLING',
    LongDistance: 'LONG_DISTANCE',
    Casual: 'CASUAL',
    Exploring: 'EXPLORING',
    Other: 'OTHER'
} as const;

export type UserContextDTORelationshipStatusEnum = typeof UserContextDTORelationshipStatusEnum[keyof typeof UserContextDTORelationshipStatusEnum];


